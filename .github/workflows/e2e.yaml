name: e2e

on:
  workflow_dispatch:

concurrency:
  group: e2e
  cancel-in-progress: false

jobs:
  e2e-test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v5

      # Docker runtime setup
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@e468171a9de216ec08956ac3ada2f0791b6bd435 # v3

      - name: Build Docker image
        uses: docker/build-push-action@263435318d21b8e681c14492fe198d362a7d2c83 # v6
        with:
          context: .
          file: ./docker/Dockerfile
          tags: kintone-mcp-server:e2e
          load: true
        env:
          DOCKER_BUILD_SUMMARY: false

      # npm runtime setup
      - name: Setup pnpm
        uses: pnpm/action-setup@a7487c7e89a18df4991f7f222e4898a00d66ddda # v4

      - name: Setup Node.js
        uses: actions/setup-node@v5
        with:
          node-version-file: .node-version
          cache: "pnpm"

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Install @kintone/mcp-server
        run: |
          pnpm build
          pnpm add -g .

      # E2E test execution
      - name: Run E2E tests
        env:
          APP_ID: ${{ secrets.E2E_APP_ID }}
          KINTONE_BASE_URL: ${{ secrets.E2E_KINTONE_BASE_URL }}
          KINTONE_USERNAME: ${{ secrets.E2E_KINTONE_USERNAME }}
          KINTONE_PASSWORD: ${{ secrets.E2E_KINTONE_PASSWORD}}

        run: |
          pnpm test:e2e
